import os
from aiogram import Router, F, Bot
from aiogram import types
from aiogram.enums import ParseMode

kbs = {"start": types.ReplyKeyboardMarkup(keyboard=[
    [types.KeyboardButton(text="–§–∏–ª—å–º—ã")],
    [types.KeyboardButton(text="–ß—Ç–æ-—Ç–æ1")],
    [types.KeyboardButton(text="–ß—Ç–æ-—Ç–æ2")],
    [types.KeyboardButton(text="–ß—Ç–æ-—Ç–æ3")]], resize_keyboard=True),
}

router = Router()
step = ''
pictures = {}
post = ''
kb = types.ReplyKeyboardMarkup(keyboard=[
    [types.KeyboardButton(text='/menu')],
    [types.KeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')]
], resize_keyboard=True)
fragments_text = []

@router.message(F.text.lower() == '—Ñ–∏–ª—å–º—ã')
async def director(message: types.Message):
    global step
    step = 'first'
    await message.answer('–ò–º—è —Ñ–∞–π–ª–∞', reply_markup=kb)

@router.message(F.photo)
async def dowload_pic(message: types.Message, bot: Bot):
    global step
    step = 'photo'
    await bot.download(message.photo[-1], destination=f"{pictures[message.chat.id]}.png")
    await message.answer("–ó–∞–≥—Ä—É–∑–∏–ª")
    await message.answer('–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º')

@router.message(F.text)
async def text_handler(message: types.Message, bot: Bot):
    global step, post, fragments_text
    text = message.text
    fragments_text = []
    steps = ['first', 'photo', 'film name', 'director', 'year', 'Djone', "Can't", 'risk', 'if', 'go', 'u say']
    if step == 'first':
        step = 'name'
        pictures[message.chat.id] = text
        await message.answer('–ñ–¥—É —Ñ–æ—Ç–æ—á–∫—É')
    elif step == 'photo':
        step = 'film name'
        fragments_text = text.split()
        post = post + '<a href="' + fragments_text[-1] + '">' + ' '.join(
            fragments_text[:len(fragments_text) - 1]) + '</a>\n' + '\n'
        await message.answer('–ò–º—è –§–∞–º–∏–ª–∏—è —Å—Å—ã–ª–∫–∞ —Ä–µ–∂–∏—Å–µ—Ä–∞')
    elif step == 'film name':
        step = 'director'
        fragments_text = text.split()
        post = post + '–†–µ–∂–∏—Å—Å—ë—Ä: ' + '<a href="' + fragments_text[-1] + '">' + ' '.join(
            fragments_text[:len(fragments_text) - 1]) + '</a> \n'
        await message.answer('–ì–æ–¥ –≤—ã—Ö–æ–¥–∞')
    elif step == 'director':
        step = 'year'
        post = post + '–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: ' + text + '\n\n'
        await message.answer('üßê –ù–∏—á–µ–≥–æ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å, –î–∂–æ–Ω –°–Ω–æ—É')
    elif step == 'year':
        step = 'Djone'
        post = post + 'üßê <b>–ù–∏—á–µ–≥–æ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å, –î–∂–æ–Ω –°–Ω–æ—É!</b> \n\n' + '‚Äî ' + text + '\n\n'
        await message.answer('ü§Ø –ù–µ–ª—å–∑—è –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –≤–∑—è—Ç—å –∏‚Ä¶')
    elif step == 'Djone':
        step = "Can't"
        post = post + 'ü§Ø <b>–ù–µ–ª—å–∑—è –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –≤–∑—è—Ç—å –∏‚Ä¶</b>\n\n' + '‚Äî ' + text + '\n\n'
        await message.answer('üòà –Ø —Ç–æ–∂–µ –ª—é–±–ª—é —Ä–∏—Å–∫–æ–≤–∞—Ç—å')
    elif step == "Can't":
        step = 'risk'
        post = post + 'üòà <b>–Ø —Ç–æ–∂–µ –ª—é–±–ª—é —Ä–∏—Å–∫–æ–≤–∞—Ç—å</b>\n\n' + '‚Äî ' + text + '\n\n'
        await message.answer('ü§î –ê —á—Ç–æ, –µ—Å–ª–∏‚Ä¶')
    elif step == 'risk':
        step = 'if'
        post = post + 'ü§î <b>–ê —á—Ç–æ, –µ—Å–ª–∏‚Ä¶</b>\n\n' + '‚Äî ' + text + '\n\n'
        await message.answer('ü§¨ –ù—É –¥–∞, –Ω—É –¥–∞, –ø–æ—à—ë–ª —è –Ω–∞—Ñ–∏–≥')
    elif step == 'if':
        step = 'go'
        post = post + 'ü§¨ <b>–ù—É –¥–∞, –Ω—É –¥–∞, –ø–æ—à—ë–ª —è –Ω–∞—Ñ–∏–≥</b>\n\n' + '‚Äî ' + text + '\n\n'
        await message.answer('üòé –ê —Ç–µ–ø–µ—Ä—å —Ç—ã –ø—Ä–∏—Ö–æ–¥–∏—à—å –∏ –≥–æ–≤–æ—Ä–∏—à—å‚Ä¶')
    elif step == 'go':
        step = 'u say'
        post = post + 'üòé <b>–ê —Ç–µ–ø–µ—Ä—å —Ç—ã –ø—Ä–∏—Ö–æ–¥–∏—à—å –∏ –≥–æ–≤–æ—Ä–∏—à—å‚Ä¶</b>\n\n' + '‚Äî ' + text + '\n\n'
        await message.answer('üòå –ó–Ω–∞–µ—Ç–µ, —è –∏ —Å–∞–º —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞‚Ä¶')
    elif step == 'u say':
        step = 'u cam'
        post = post + 'üòå <b>–ó–Ω–∞–µ—Ç–µ, —è –∏ —Å–∞–º —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞‚Ä¶</b>\n\n' + '‚Äî ' + text + '\n\n‚ù§Ô∏è ‚Äì —Å–º–æ—Ç—Ä–µ–ª–∏\nüî• ‚Äì —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ–º\n\n#—Ñ–∏–ª—å–º–∏—É—Å'
        await message.answer('–ø–æ—Å—Ç –∑–∞–∫–æ–Ω—á–µ–Ω')
        photo = types.FSInputFile(f"{pictures[message.chat.id]}.png")
        await bot.send_photo(message.chat.id, photo=photo, caption=post, parse_mode=ParseMode.HTML)
        os.remove(f'C:/Users/dimasik/kir_bot/Content_bot/{pictures[message.chat.id]}.png')
        await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–ö–∞–∫–æ–π –ø–æ—Å—Ç –¥–µ–ª–∞–µ–º?', reply_markup=kbs['start'])
